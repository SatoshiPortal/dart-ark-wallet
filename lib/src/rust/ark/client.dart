// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import '../lib.dart';
import 'addresses.dart';
import 'balance.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'transactions.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `clone`

Future<ArkClient> setupClient({required ArkClientConfig config}) =>
    LibArk.instance.api.crateArkClientSetupClient(config: config);

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ArkClient>>
abstract class ArkClient implements RustOpaqueInterface {
  Future<Addresses> addresses();

  ArcClientEsploraClientWalletInMemoryDb get inner;

  set inner(ArcClientEsploraClientWalletInMemoryDb inner);

  Future<Balance> balance();

  Future<List<Transaction>> fetchTransactions();

  static Future<ArkClient> init({required ArkClientConfig config}) =>
      LibArk.instance.api.crateArkClientArkClientInit(config: config);
}

class ArkClientConfig {
  final String nsec;
  final String network;
  final String esplora;
  final String server;

  const ArkClientConfig({
    required this.nsec,
    required this.network,
    required this.esplora,
    required this.server,
  });

  @override
  int get hashCode =>
      nsec.hashCode ^ network.hashCode ^ esplora.hashCode ^ server.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ArkClientConfig &&
          runtimeType == other.runtimeType &&
          nsec == other.nsec &&
          network == other.network &&
          esplora == other.esplora &&
          server == other.server;
}
